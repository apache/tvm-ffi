# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      # dev branch is used for testing purposes
      - dev

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      should_skip_ci_commit: ${{ steps.detect.outputs.should_skip_ci_commit }}
      should_skip_ci_docs_only: ${{ steps.detect.outputs.should_skip_ci_docs_only }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Detect skip ci and docs changes
        id: detect
        uses: ./.github/actions/detect-skip-ci
        with:
          github_event_name: ${{ github.event_name }}
          pr_base_ref: ${{ github.event.pull_request.base.ref || '' }}
          pr_head_sha: ${{ github.event.pull_request.head.sha || '' }}

  lint:
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd  # v3.0.1

  test:
    needs: [lint, prepare]
    if: >
      needs.prepare.outputs.should_skip_ci_commit != 'true' &&
      needs.prepare.outputs.should_skip_ci_docs_only != 'true'
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - {os: ubuntu-latest, arch: x86_64}
          - {os: ubuntu-24.04-arm, arch: aarch64}
          - {os: windows-latest, arch: AMD64}
          - {os: macos-14, arch: arm64}

    steps:
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/detect-env-vars
        id: env_vars

      - name: Print CPU count
        run: |
          echo "CPU count: ${{ steps.env_vars.outputs.cpu_count }}"

      - name: Print current commit
        run: git log -1 --oneline

      - name: Run cpp tests
        if: ${{ matrix.os != 'windows-latest' }}
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: ${{ steps.env_vars.outputs.cpu_count }}
        run: |
          cmake . -B build_test -DTVM_FFI_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug
          cmake --build build_test --clean-first --config Debug --target tvm_ffi_tests
          ctest -V -C Debug --test-dir build_test --output-on-failure

      - name: Run cpp tests[windows]
        if: ${{ matrix.os == 'windows-latest' }}
        shell: cmd
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: ${{ steps.env_vars.outputs.cpu_count }}
        run: >
          cmake . -B build_test -DTVM_FFI_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Debug &&
          cmake --build build_test --clean-first --config Debug --target tvm_ffi_tests &&
          ctest -V -C Debug --test-dir build_test --output-on-failure

      - name: Build and install python package
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: ${{ steps.env_vars.outputs.cpu_count }}
        run: |
          python -m pip install --upgrade pip
          pip install -v ".[test]"

      - name: Run python tests
        run: |
          pytest -vvs tests/python
